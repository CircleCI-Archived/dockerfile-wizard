image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: DEEP_LEARNING_GPU

  IMAGE_TAG: GPU

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 55)

  LINUX_VERSION: UBUNTU_XENIAL

  PYTHON_VERSION_NUM: 3.6.4

  DOCKERIZE: false

version: 2
jobs:
  build:
    machine: true
    environment:
      <<: *image_config

    steps:
      - checkout

##      - run: bash scripts/generate.sh > Dockerfile

##      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

##      - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

##      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

##      - store_artifacts:
##          path: Dockerfile

##  test_image:
##    docker:
##      - image: $DOCKER_USERNAME/(name of image):(image tag)
##        environment:
##          <<: *image_config

##    steps:
##      - checkout

##      - run:
##          name: start Xvfb for phantomjs test
##          command: Xvfb :99
##          background: true

##      - run:
##          name: bats tests
##          command: |
##            mkdir -p test_results/bats
##            bats scripts/tests.bats | \
##            perl scripts/tap-to-junit.sh > \
##            test_results/bats/results.xml

##      - store_test_results:
##          path: test_results

##      - store_artifacts:
##          path: test_results

##workflows:
##  version: 2
##  dockerfile_wizard:
##    jobs:
##      - build:
##          context: org-global

##      - test_image:
##          context: org-global
##          requires:
##            - build
